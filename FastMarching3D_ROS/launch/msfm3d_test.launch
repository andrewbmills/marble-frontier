<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="ground_vehicle" default="true" />
  <arg name="resolution" default="0.2" />

  <node pkg="msfm3d" type="msfm3d" name="global_planning">
    <!-- Inputs (Subscribed Topic Names) -->

    <!-- <remap from="octomap_binary" to="octomap_binary_crap"/> -->
    <remap from="odometry" to="odometry_stitch"/>

    <!-- Outputs (Published Topic Names) -->

    <!-- <remap from="nearest_frontier" to="nearest_frontier_2"/> -->
    <!-- <remap from="frontier_goal_pose" to="frontier_goal_pose_2"/> -->
    <!-- <remap from="planned_path" to="planned_path_2"/> -->
    <!-- <remap from="frontier" to="frontier_2"/> -->
    <!-- <remap from="goalFrustum" to="goalFrustum_2"/> -->
    <!-- <remap from="inflated_octomap" to="inflated_octomap"/> -->
    <remap from="artifact_list" to="report_artifact"/>
    <!-- <remap from="voxblox_node/tsdf_pointcloud" to="voxblox_node/esdf_pointcloud"/> -->
    <!-- <remap from="voxblox_node/tsdf_pointcloud" to="cost_map"/> -->
    <remap from="voxblox_node/tsdf_pointcloud" to="edt"/>
    <remap from="custom_goal_point" to="guiGoalPoint"/>

    <!-- Parameters -->
    <!-- Map Resolution -->
    <param name="resolution" value="$(arg resolution)"/>

    <!-- The planner assumes the vehicle is an air vehicle.  If the vehicle is constrained to the ground (wheeled vehicle), set to true. -->
    <param name="isGroundVehicle" value="false"/>

    <!-- If the vehicle is an air vehicle, the following params should be set -->
    <param name="minGoalDist" value="1.0" />
    <param name="goalArrivalDist" value="1.0" />

	 <!-- Whether or not you want to use an Occupancy Grid or an ESDF map type -->
    <param name="useOctomap" value="false"/>

    <!-- Name of the map world frame -->
    <param name="frame_id" type="string" value="world"/>

    <!-- Vehicle speed in m/s and turnRate in deg/s -->
    <param name="speed" value="1.0"/>
    <param name="turnPenalty" value="0.4"/>
    <param name="minViewCloudSize" value="5"/>

    <!-- Frontier Clustering parameters (in voxels) -->
    <param name="cluster_radius" value="0.30" />
    <param name="min_cluster_size" value="50" />
    <param name="normalThresholdZ" value="0.4" />

    <!-- Number of ticks before replanning -->
    <param name="replan_ticks" value="5" />
    <!-- Number of ticks before sampling new goal poses -->
    <param name="goal_ticks" value="30" />
    <!-- Replan trigger method -->
    <param name="replanTrigger" type="string" value="frontier"/>
    <!-- <param name="replanTrigger" type="string" value="distance"/> -->

    <!-- Location of the environment entrance. (Default is [0.0, 0.0, 0.0])  The robot will not explore area within entrance_radius meters of this point -->
    <param name="entrance_x" value="-4.0" />
    <param name="entrance_y" value="0.0" />
    <param name="entrance_z" value="0.3" />
    <!-- <param name="entrance_x" value="10.0" />
    <param name="entrance_y" value="27.0" />
    <param name="entrance_z" value="7.6" /> -->
    <!-- <param name="entrance_x" value="4.0" /> -->
    <!-- <param name="entrance_y" value="0.0" /> -->
    <!-- <param name="entrance_z" value="0.1" /> -->
    <param name="entrance_radius" value="0.0" />

    <!-- Camera viewing parameters, angles in degrees, ranges in meters -->
    <param name="cameraVerticalFoV" value="40.0"/>
    <param name="cameraHorizontalFoV" value="65.0"/>
    <param name="cameraMaxRange" value="2.5"/>
    <param name="cameraMinRange" value="0.5"/>
    <param name="robot2camera_roll" value="0.0"/>
    <param name="robot2camera_pitch" value="15.0"/>
    <param name="robot2camera_yaw" value="0.0"/>
    <!--  -->

    <!-- roll, pitch, yaw for rotation from robot orientation to camera orientation (Default is identity rotation matrix) -->
    <!-- <param name="robot2camera_q_w" value="1.0"/>
    <param name="robot2camera_q_x" value="0.0"/>
    <param name="robot2camera_q_y" value="0.0"/>
    <param name="robot2camera_q_z" value="0.0"/> -->

    <!-- Update Rate, default is 1.0 Hz -->
    <param name="updateRate" value="1.0"/>

    <!-- Inflated Obstacle width -->
    <param name="inflateWidth" value="0.4"/>

    <!-- Vehicle Fence Volume Limits -->
    <param name="fenceOn" value="true"/>
    <param name="fence_xmin" value="-1000.0"/>
    <param name="fence_xmax" value="1000.0"/>
    <param name="fence_ymin" value="-1000.0"/>
    <param name="fence_ymax" value="1000.0"/>
    <param name="fence_zmin" value="-0.4"/>
    <param name="fence_zmax" value="3.0"/>

    <!-- Vehicle Volume Extents -->
    <param name="vehicleVolumeOn" value="true"/>
    <param name="vehicleVolumeXmin" value="-0.11"/>
    <param name="vehicleVolumeXmax" value="0.11"/>
    <param name="vehicleVolumeYmin" value="-0.11"/>
    <param name="vehicleVolumeYmax" value="0.11"/>
    <param name="vehicleVolumeZmin" value="-0.11"/>
    <param name="vehicleVolumeZmax" value="0.11"/>

    <!-- Fix vehicle goal height (in meters) above map ground level for a quad/ground vehicle -->
    <param name="fixGoalHeightAGL" value="false"/>
    <param name="goalHeightAGL" value="0.2"/>

    <!-- Fix the delta z in voxels from the vehicle current height that are considered frontiers -->
    <param name="dzFrontierVoxelWidth" type="int" value="-1"/>

    <!-- Multi-agent Parameters -->
    <param name="agentCount" value="1"/>
    <param name="goalViewSeparation" value = "2.5"/>

    <!-- Cost Function -->
    <param name="goalFunction" type="string" value="cost"/>
    <param name="gain" type="string" value="constant"/>
    <!-- <param name="goalFunction" type="string" value="information"/> -->

    <!-- Minimum obstacle proximity for goal poses (adds to inflated distance) -->
    <param name="viewPoseObstacleDistance" value="0.1"/>

  </node>

</launch>
